(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],2:[function(require,module,exports){
var arrayLikeToArray = require("./arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{"./arrayLikeToArray.js":1}],3:[function(require,module,exports){
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],4:[function(require,module,exports){
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],5:[function(require,module,exports){
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}

module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],6:[function(require,module,exports){
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],7:[function(require,module,exports){
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}

module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],8:[function(require,module,exports){
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{}],9:[function(require,module,exports){
var arrayWithoutHoles = require("./arrayWithoutHoles.js");

var iterableToArray = require("./iterableToArray.js");

var unsupportedIterableToArray = require("./unsupportedIterableToArray.js");

var nonIterableSpread = require("./nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{"./arrayWithoutHoles.js":2,"./iterableToArray.js":7,"./nonIterableSpread.js":8,"./unsupportedIterableToArray.js":10}],10:[function(require,module,exports){
var arrayLikeToArray = require("./arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;
},{"./arrayLikeToArray.js":1}],11:[function(require,module,exports){
module.exports = require("regenerator-runtime");

},{"regenerator-runtime":12}],12:[function(require,module,exports){
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}

},{}],13:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Cell=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var Cell=/*#__PURE__*/function(){function Cell(){(0,_classCallCheck2["default"])(this,Cell);// Initialize element
this.element=document.createElement("div");this.element.classList.add("cell")}(0,_createClass2["default"])(Cell,[{key:"clear",value:function clear(){this.letter="";this.element.classList.remove("correct");this.element.classList.remove("incorrect");this.element.classList.remove("hint");this.element.removeAttribute("data-badge")}},{key:"setBadge",value:function setBadge(text){this.element.setAttribute("data-badge",text)}},{key:"markAsCorrect",value:function markAsCorrect(){this.element.classList.add("correct")}},{key:"markAsIncorrect",value:function markAsIncorrect(){this.element.classList.add("incorrect")}},{key:"markAsHint",value:function markAsHint(){this.element.classList.add("hint")}},{key:"letter",get:function get(){return this.element.innerText},set:function set(value){this.element.innerText=value}}]);return Cell}();exports.Cell=Cell;

},{"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6}],14:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.STATE_PLAYING=exports.STATE_GAME_OVER=exports.POINTS_CORRECT_LETTER_WRONG_ORDER=exports.POINTS_CORRECT_LETTER_AND_ORDER=exports.ALPHABET=void 0;// Constants
var POINTS_CORRECT_LETTER_AND_ORDER=10;exports.POINTS_CORRECT_LETTER_AND_ORDER=POINTS_CORRECT_LETTER_AND_ORDER;var POINTS_CORRECT_LETTER_WRONG_ORDER=2;exports.POINTS_CORRECT_LETTER_WRONG_ORDER=POINTS_CORRECT_LETTER_WRONG_ORDER;var STATE_PLAYING=0;exports.STATE_PLAYING=STATE_PLAYING;var STATE_GAME_OVER=1;exports.STATE_GAME_OVER=STATE_GAME_OVER;var ALPHABET=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"];exports.ALPHABET=ALPHABET;

},{}],15:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Dictionary=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet);privateSet.add(obj)}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj)){throw new TypeError("Cannot initialize the same private elements twice on an object")}}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return fn}var _loadFile=/*#__PURE__*/new WeakSet;var _filterSameSizeWords=/*#__PURE__*/new WeakSet;var Dictionary=/*#__PURE__*/function(){function Dictionary(wordSize){(0,_classCallCheck2["default"])(this,Dictionary);_classPrivateMethodInitSpec(this,_filterSameSizeWords);_classPrivateMethodInitSpec(this,_loadFile);this.filename="lang/dictionary-enus.txt";this.wordSize=wordSize;this.words=[];this.index=0}(0,_createClass2["default"])(Dictionary,[{key:"init",value:function(){var _init=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee(){var lines;return _regenerator["default"].wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _classPrivateMethodGet(this,_loadFile,_loadFile2).call(this);case 2:lines=_context.sent;// Process it
console.groupCollapsed("Dictionary");console.log("Loaded dictionary!");console.log("Found ".concat(lines.length," in total"));_classPrivateMethodGet(this,_filterSameSizeWords,_filterSameSizeWords2).call(this,lines);// Randomize the word list
this.words.shuffle();console.log("".concat(this.words.length," words with ").concat(this.wordSize," letters (").concat(Math.floor(this.words.length/lines.length*100),"%)"));console.log(this.words);console.groupEnd();case 11:case"end":return _context.stop();}}},_callee,this)}));function init(){return _init.apply(this,arguments)}return init}()},{key:"getNextWord",value:function getNextWord(){var word=this.words[this.index++].toUpperCase();console.log("%cTarget word: ".concat(word),"color: magenta");return word}}]);return Dictionary}();exports.Dictionary=Dictionary;function _loadFile2(){return _loadFile3.apply(this,arguments)}function _loadFile3(){_loadFile3=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee2(){var response,content;return _regenerator["default"].wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(this.filename);case 2:response=_context2.sent;_context2.next=5;return response.text();case 5:content=_context2.sent;return _context2.abrupt("return",content.split(/\r?\n/g));case 7:case"end":return _context2.stop();}}},_callee2,this)}));return _loadFile3.apply(this,arguments)}function _filterSameSizeWords2(words){var _this=this;// Remove words with different length than the given one
this.words=words.filter(function(x){return x.length===_this.wordSize})}

},{"@babel/runtime/helpers/asyncToGenerator":3,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6,"@babel/runtime/regenerator":11}],16:[function(require,module,exports){
"use strict";Array.prototype.random=function(){var index=Math.floor(Math.random()*this.length);return this[index]};Array.prototype.contains=function(elem){return this.includes(elem)};Array.prototype.shuffle=function(){for(var i=this.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[this[j],this[i]];this[i]=_ref[0];this[j]=_ref[1]}};String.prototype.contains=function(search){return this.indexOf(search)!==-1};

},{}],17:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Keyboard=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _constants=require("./constants.js");function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!=="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length==="number"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]}},e:function e(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o)},n:function n(){var step=it.next();normalCompletion=step.done;return step},e:function e(_e2){didErr=true;err=_e2},f:function f(){try{if(!normalCompletion&&it["return"]!=null)it["return"]()}finally{if(didErr)throw err}}}}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o==="string")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n==="Object"&&o.constructor)n=o.constructor.name;if(n==="Map"||n==="Set")return Array.from(o);if(n==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i]}return arr2}function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet);privateSet.add(obj)}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj)){throw new TypeError("Cannot initialize the same private elements twice on an object")}}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return fn}var CODE_BACKSPACE=8;var CODE_RETURN=13;var CODE_A=65;var CODE_Z=90;var _generate=/*#__PURE__*/new WeakSet;var _createKeyElement=/*#__PURE__*/new WeakSet;var _loadSVG=/*#__PURE__*/new WeakSet;var _onVirtualKeyBoardClick=/*#__PURE__*/new WeakSet;var _getKeyElement=/*#__PURE__*/new WeakSet;var _simulateKeyTap=/*#__PURE__*/new WeakSet;var _attachHooks=/*#__PURE__*/new WeakSet;var _onKey=/*#__PURE__*/new WeakSet;var Keyboard=/*#__PURE__*/function(){function Keyboard(main){(0,_classCallCheck2["default"])(this,Keyboard);_classPrivateMethodInitSpec(this,_onKey);_classPrivateMethodInitSpec(this,_attachHooks);_classPrivateMethodInitSpec(this,_simulateKeyTap);_classPrivateMethodInitSpec(this,_getKeyElement);_classPrivateMethodInitSpec(this,_onVirtualKeyBoardClick);_classPrivateMethodInitSpec(this,_loadSVG);_classPrivateMethodInitSpec(this,_createKeyElement);_classPrivateMethodInitSpec(this,_generate);this.main=main;// Create element
this.element=document.createElement("div");this.element.classList.add("keyboard");_classPrivateMethodGet(this,_generate,_generate2).call(this);document.body.appendChild(this.element);// Register event listeners
_classPrivateMethodGet(this,_attachHooks,_attachHooks2).call(this)}(0,_createClass2["default"])(Keyboard,[{key:"clear",value:function clear(){for(var i=0;i<_constants.ALPHABET.length;i++){var element=_classPrivateMethodGet(this,_getKeyElement,_getKeyElement2).call(this,_constants.ALPHABET[i]);element.classList.remove("correct");element.classList.remove("hint");element.classList.remove("incorrect");element.classList.remove("active")}}},{key:"highlightKeysAccordingToAnswer",value:function highlightKeysAccordingToAnswer(answer,stats){for(var letter in stats){if(!stats.hasOwnProperty(letter))continue;var element=_classPrivateMethodGet(this,_getKeyElement,_getKeyElement2).call(this,letter);if(stats[letter].misplaced>0){element.classList.add("hint")}else if(stats[letter].matches>0){element.classList.add("correct")}}var _iterator=_createForOfIteratorHelper(answer),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var _letter=_step.value;if(!stats.hasOwnProperty(_letter)||stats[_letter].count<=0){var _element=_classPrivateMethodGet(this,_getKeyElement,_getKeyElement2).call(this,_letter);_element===null||_element===void 0?void 0:_element.classList.add("incorrect")}}}catch(err){_iterator.e(err)}finally{_iterator.f()}}}]);return Keyboard}();exports.Keyboard=Keyboard;function _generate2(){return _generate3.apply(this,arguments)}function _generate3(){_generate3=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee(){var layout,_i,_layout,row,rowElement,_iterator2,_step2,col,keyElement;return _regenerator["default"].wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// Define the keyboard layout
layout=[["Q","W","E","R","T","Y","U","I","O","P"],["A","S","D","F","G","H","J","K","L"],["#BACKSPACE","Z","X","C","V","B","N","M","#ENTER"]];// For each row in the layout
_i=0,_layout=layout;case 2:if(!(_i<_layout.length)){_context.next=29;break}row=_layout[_i];// Create the row element
rowElement=document.createElement("div");rowElement.classList.add("row");// For each key in the row
_iterator2=_createForOfIteratorHelper(row);_context.prev=7;_iterator2.s();case 9:if((_step2=_iterator2.n()).done){_context.next=17;break}col=_step2.value;_context.next=13;return _classPrivateMethodGet(this,_createKeyElement,_createKeyElement2).call(this,col);case 13:keyElement=_context.sent;rowElement.appendChild(keyElement);case 15:_context.next=9;break;case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context["catch"](7);_iterator2.e(_context.t0);case 22:_context.prev=22;_iterator2.f();return _context.finish(22);case 25:this.element.appendChild(rowElement);case 26:_i++;_context.next=2;break;case 29:case"end":return _context.stop();}}},_callee,this,[[7,19,22,25]])}));return _generate3.apply(this,arguments)}function _createKeyElement2(_x){return _createKeyElement3.apply(this,arguments)}function _createKeyElement3(){_createKeyElement3=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee2(col){var keyElement;return _regenerator["default"].wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Create the key element
keyElement=document.createElement("div");keyElement.classList.add("key");keyElement.setAttribute("data-key",col);// If special key, use an icon to describe it
if(!col.startsWith("#")){_context2.next=10;break}_context2.next=6;return _classPrivateMethodGet(this,_loadSVG,_loadSVG2).call(this,col.substring(1));case 6:keyElement.innerHTML=_context2.sent;keyElement.classList.add("img");_context2.next=11;break;case 10:// Otherwise just the letter
keyElement.innerText=col;case 11:// Handle tap
keyElement.addEventListener("click",_classPrivateMethodGet(this,_onVirtualKeyBoardClick,_onVirtualKeyBoardClick2).bind(this,col));return _context2.abrupt("return",keyElement);case 13:case"end":return _context2.stop();}}},_callee2,this)}));return _createKeyElement3.apply(this,arguments)}function _loadSVG2(_x2){return _loadSVG3.apply(this,arguments)}function _loadSVG3(){_loadSVG3=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee3(name){return _regenerator["default"].wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch("assets/ic_".concat(name.toLowerCase(),".svg")).then(function(x){return x.text()});case 2:return _context3.abrupt("return",_context3.sent);case 3:case"end":return _context3.stop();}}},_callee3)}));return _loadSVG3.apply(this,arguments)}function _onVirtualKeyBoardClick2(key){// If the game is in GAME_OVER state, just reset it
if(this.main.state===_constants.STATE_GAME_OVER)return this.main.reset();switch(key){case"#BACKSPACE":// Handle letter erasing
this.main.onBackspacePressed();break;case"#ENTER":// Handle row completion
this.main.onEnterPressed();break;default:// Handle letter typing
this.main.onTypeLetter(key);break;}}function _getKeyElement2(key){return this.element.querySelector("[data-key=\"".concat(key,"\""))}function _simulateKeyTap2(event){var key=event.key.toUpperCase();// Special keys
if(event.keyCode===CODE_BACKSPACE||event.keyCode===CODE_RETURN)key="#".concat(key);// Fetch the key element
var element=_classPrivateMethodGet(this,_getKeyElement,_getKeyElement2).call(this,key);// Highlight the key
if(event.type==="keyup"){element===null||element===void 0?void 0:element.classList.remove("active")}else if(event.type==="keydown"){element===null||element===void 0?void 0:element.classList.add("active")}}function _attachHooks2(){window.addEventListener("keyup",_classPrivateMethodGet(this,_onKey,_onKey2).bind(this));window.addEventListener("keydown",_classPrivateMethodGet(this,_onKey,_onKey2).bind(this));window.addEventListener("keypress",_classPrivateMethodGet(this,_onKey,_onKey2).bind(this))}function _onKey2(event){_classPrivateMethodGet(this,_simulateKeyTap,_simulateKeyTap2).call(this,event);if(event.type!=="keydown")return;// If the game is in GAME_OVER state, just reset it
if(this.main.state===_constants.STATE_GAME_OVER)return this.main.reset();if(event.keyCode>=CODE_A&&event.keyCode<=CODE_Z){// Handle letter typing
this.main.onTypeLetter(String.fromCharCode(event.keyCode));event.preventDefault()}else if(event.keyCode===CODE_BACKSPACE){// Handle letter erasing
this.main.onBackspacePressed();event.preventDefault()}else if(event.keyCode===CODE_RETURN){// Handle row completion
this.main.onEnterPressed();event.preventDefault()}}

},{"./constants.js":14,"@babel/runtime/helpers/asyncToGenerator":3,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6,"@babel/runtime/regenerator":11}],18:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));require("./extensions.js");var _ui=require("./ui.js");var _dictionary=require("./dictionary.js");var _keyboard=require("./keyboard.js");var _constants=require("./constants.js");function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet);privateSet.add(obj)}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj)){throw new TypeError("Cannot initialize the same private elements twice on an object")}}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return fn}var _analyzeMatches=/*#__PURE__*/new WeakSet;var _analyzeMismatches=/*#__PURE__*/new WeakSet;var _onCorrectAnswer=/*#__PURE__*/new WeakSet;var Main=/*#__PURE__*/function(){function Main(){(0,_classCallCheck2["default"])(this,Main);_classPrivateMethodInitSpec(this,_onCorrectAnswer);_classPrivateMethodInitSpec(this,_analyzeMismatches);_classPrivateMethodInitSpec(this,_analyzeMatches);this.rowCount=6;this.wordSize=4;this.ui=new _ui.UI(this.rowCount,this.wordSize);this.cursor={row:0,col:0};this.dictionary=new _dictionary.Dictionary(this.wordSize);// Initializes the keyboard
this.keyboard=new _keyboard.Keyboard(this);this.init()}(0,_createClass2["default"])(Main,[{key:"reset",value:function reset(){// Reset the keyboard state
this.keyboard.clear();// Reset variables
this.points=0;this.cursor={row:0,col:0};// Reset all the cells
for(var row=0;row<this.rowCount;row++){this.ui.resetRow(row)}// Request another word
this.targetWord=this.dictionary.getNextWord();// Set game sate
this.state=_constants.STATE_PLAYING;// Highlight the first row, indicating the game is ready
this.highlightCurrentRow(0)}},{key:"init",value:function(){var _init=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee(){return _regenerator["default"].wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.dictionary.init();case 2:// And post-pone game initial state
setTimeout(this.reset.bind(this),250);case 3:case"end":return _context.stop();}}},_callee,this)}));function init(){return _init.apply(this,arguments)}return init}()},{key:"onTypeLetter",value:function onTypeLetter(letter){// Check whether the cell is empty
if(!this.ui.isEmpty(this.cursor)){if(this.cursor.col>=this.wordSize-1)return;this.cursor.col++}// Set the letter at cursor
this.ui.setCell(this.cursor,letter);// Move cursor
if(this.cursor.col<this.wordSize-1)this.cursor.col++}},{key:"onBackspacePressed",value:function onBackspacePressed(){while(this.cursor.col>0&&this.ui.isEmpty(this.cursor)){this.cursor.col--}// Remove the letter at cursor
this.ui.setCell(this.cursor,"");// Move cursor
if(this.cursor.col>0)this.cursor.col--}},{key:"onEnterPressed",value:function onEnterPressed(){// Check if all the letters in the row have been defined
if(this.cursor.col<=this.wordSize&&!this.ui.isEmpty(this.cursor)){// Validate completed row
this.onRowCompletion();// If still playing
if(this.state===_constants.STATE_PLAYING){// Check if we are out of tries
if(this.cursor.row+1>=this.rowCount){this.state=_constants.STATE_GAME_OVER;this.ui.showToast("Game over!")}else{// Highlight the next row as active
this.highlightCurrentRow(this.cursor.row+1);// Move to next line
this.cursor.row++;this.cursor.col=0}}}else{this.ui.showToast("Too short!")}}},{key:"onRowCompletion",value:function onRowCompletion(){// Get the row's text
var answer=this.ui.getRowText(this.cursor.row);// Checks if the game has been won
if(answer===this.targetWord)return _classPrivateMethodGet(this,_onCorrectAnswer,_onCorrectAnswer2).call(this,this.cursor.row);// Analyzes misplaces occurrences
var stats=_classPrivateMethodGet(this,_analyzeMatches,_analyzeMatches2).call(this,answer);for(var i=0;i<this.wordSize;i++){var expected=this.targetWord[i];var actual=answer[i];var cell=this.ui.getCell({row:this.cursor.row,col:i});if(expected===actual){// Only one occurrence of 'actual' letter, but there is more than one in the word
if(stats[actual].count>stats[actual].matches&&stats[actual].misplaced<=0)cell.setBadge(stats[actual].count);// Expected and in corrected spot
cell.markAsCorrect();// Register points
this.points+=_constants.POINTS_CORRECT_LETTER_AND_ORDER}else if(stats.hasOwnProperty(actual)&&stats[actual].count>stats[actual].matches){// Only occurrence of 'actual' letter, and with more than one occurrence on the word but on different spots
if(stats[actual].count>stats[actual].misplaced&&stats[actual].count>1)cell.setBadge(stats[actual].count);// Wrong spot
cell.markAsHint();// Register points
this.points+=_constants.POINTS_CORRECT_LETTER_WRONG_ORDER}else{// Wrong letter and spot
cell.markAsIncorrect()}}// Highlights the keyboard keys
this.keyboard.highlightKeysAccordingToAnswer(answer,stats)}},{key:"highlightCurrentRow",value:function highlightCurrentRow(row){this.ui.rows[this.cursor.row].clear();this.ui.rows[row].markAsActive()}}]);return Main}();function _analyzeMatches2(answer){var stats={};var createIfNonExistent=function createIfNonExistent(property){if(!stats.hasOwnProperty(property)){stats[property]={count:0,matches:0,misplaced:0}}};// Analyzes letter occurrences
for(var i=0;i<this.wordSize;i++){var expected=this.targetWord[i];var actual=answer[i];createIfNonExistent(expected);stats[expected].count++;// Count occurrence
if(expected===actual)stats[expected].matches++;// Count match
}_classPrivateMethodGet(this,_analyzeMismatches,_analyzeMismatches2).call(this,stats,answer,createIfNonExistent);return stats}function _analyzeMismatches2(stats,answer,createIfNonExistent){// Analyzes letter misplacement
for(var i=0;i<this.wordSize;i++){var expected=this.targetWord[i];var actual=answer[i];if(actual!==expected&&stats.hasOwnProperty(actual)&&stats[actual].count>0){createIfNonExistent(actual);stats[actual].misplaced++;// Count misplaced
}}}function _onCorrectAnswer2(row){// Add points
this.points+=_constants.POINTS_CORRECT_LETTER_AND_ORDER*this.wordSize*3;// Visual feedback
this.ui.showToast("You win!");// Change the game state
this.state=_constants.STATE_GAME_OVER;// Highlight entire row as correct
for(var col=0;col<this.wordSize;col++){this.ui.getCell({row:row,col:col}).markAsCorrect()}}new Main;

},{"./constants.js":14,"./dictionary.js":15,"./extensions.js":16,"./keyboard.js":17,"./ui.js":20,"@babel/runtime/helpers/asyncToGenerator":3,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6,"@babel/runtime/regenerator":11}],19:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Row=void 0;var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _cell=require("./cell.js");var Row=/*#__PURE__*/function(){function Row(cellCount){(0,_classCallCheck2["default"])(this,Row);// Initialize element
this.element=document.createElement("div");this.element.classList.add("row");// Initialize the cells
this.cells=[];for(var i=0;i<cellCount;i++){var cell=new _cell.Cell;this.cells.push(cell);this.element.appendChild(cell.element)}}(0,_createClass2["default"])(Row,[{key:"clear",value:function clear(){this.element.classList.remove("active")}},{key:"markAsActive",value:function markAsActive(){this.element.classList.add("active")}}]);return Row}();exports.Row=Row;

},{"./cell.js":13,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6}],20:[function(require,module,exports){
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.UI=void 0;var _toConsumableArray2=_interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _row=require("./row.js");function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet);privateSet.add(obj)}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj)){throw new TypeError("Cannot initialize the same private elements twice on an object")}}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver)){throw new TypeError("attempted to get private field on non-instance")}return fn}var _generateRows=/*#__PURE__*/new WeakSet;var _markLetter=/*#__PURE__*/new WeakSet;var UI=/*#__PURE__*/function(){function UI(_rowCount,_wordSize){(0,_classCallCheck2["default"])(this,UI);_classPrivateMethodInitSpec(this,_markLetter);_classPrivateMethodInitSpec(this,_generateRows);// Initialize element
this.element=document.createElement("div");this.element.classList.add("ui");document.body.appendChild(this.element);// Initialize the rows
_classPrivateMethodGet(this,_generateRows,_generateRows2).call(this,_rowCount,_wordSize)}(0,_createClass2["default"])(UI,[{key:"setCell",value:function setCell(_ref,key){var row=_ref.row,col=_ref.col;this.rows[row].cells[col].letter=key}},{key:"getCell",value:function getCell(_ref2){var row=_ref2.row,col=_ref2.col;return this.rows[row].cells[col]}},{key:"isEmpty",value:function isEmpty(_ref3){var row=_ref3.row,col=_ref3.col;var letter=this.rows[row].cells[col].letter;return!letter||letter.length<=0}},{key:"getRowText",value:function getRowText(row){return this.rows[row].cells.map(function(x){return x.letter}).join("")}},{key:"resetRow",value:function resetRow(row){this.rows[row].clear();for(var col=0;col<this.rows[row].cells.length;col++){this.rows[row].cells[col].clear()}}},{key:"showToast",value:function showToast(message){var duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2000;// Creates a toast element
var element=document.createElement("div");element.classList.add("toast");element.setAttribute("data-duration",duration);element.innerText=message;// Shows it
document.body.appendChild(element);setTimeout(function(){element.classList.add("removing")},duration-250);// Removes the toast element
setTimeout(function(){document.body.removeChild(element)},duration)}},{key:"showMessage",value:function showMessage(message){var element=document.createElement("div");element.classList.add("message");element.innerText=message}},{key:"markLetterAsCorrect",value:function markLetterAsCorrect(letter){_classPrivateMethodGet(this,_markLetter,_markLetter2).call(this,letter,"correct")}},{key:"markLetterAsIncorrect",value:function markLetterAsIncorrect(letter){_classPrivateMethodGet(this,_markLetter,_markLetter2).call(this,letter,"incorrect")}},{key:"markLetterAsHint",value:function markLetterAsHint(letter){_classPrivateMethodGet(this,_markLetter,_markLetter2).call(this,letter,"hit")}}]);return UI}();exports.UI=UI;function _generateRows2(rowCount,wordSize){this.rows=[];for(var i=0;i<rowCount;i++){var row=new _row.Row(wordSize);this.rows.push(row);this.element.appendChild(row.element)}}function _markLetter2(letter,tag){var letterElement=(0,_toConsumableArray2["default"])(this.keyboardElement.children).find(function(x){return x.innerText===letter});letterElement.classList.add(tag)}

},{"./row.js":19,"@babel/runtime/helpers/classCallCheck":4,"@babel/runtime/helpers/createClass":5,"@babel/runtime/helpers/interopRequireDefault":6,"@babel/runtime/helpers/toConsumableArray":9}]},{},[18])

//# sourceMappingURL=script.min.js.map
